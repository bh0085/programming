package physics.pscript{	public class PhysScript{				public var frame:Number = 0		public var isPaused:Boolean = false		public var scriptDone:Boolean = false		public var startingStep = -1		var priority = 0		public var multiPriorities = false				public function beginScriptDefault():void{			beginScript()		}				public function beginScript():void{}		public function advanceDefault(p:Number):Boolean{						if(!multiPriorities){				if (! scriptDone && !isPaused && (priority == p)){						frame++						advance()										}								} else {				if (! scriptDone){					if(startingStep == -1){startingStep = p}												if (!isPaused){							if(p == startingStep){frame++}							advance(p)}				}				}			return (scriptDone)		}		public function advance(...args):void{}		public function pauseScript():void		{isPaused = true}		public function unPauseScript():void	{isPaused = false}		public function endScriptDefault():void	{			endScript()		}		public function endScript():void{}				public function getPriority():Number{			return priority		}		public function setPriority(arg):void{			priority = arg		}			}}