package physics{	import flash.display.Sprite	import flash.events.Event	import physics.pscript.*		public class PhysOverlay extends Sprite{		public var thisSuper:PhysSuper		public var overlayBottom:Sprite		public var overlayTop:Sprite		public var overlayMiddle:Sprite		public var margin = 20		public var tbHeights = 100		public var scripts = new Array()		public var opacity = 1				public function PhysOverlay(pSuper:PhysSuper):void{			thisSuper = pSuper			thisSuper.addChild(this)			visible = false						overlayTop = new Sprite()			overlayBottom= new Sprite()			overlayMiddle= new Sprite						if (getDefaultLineWidth() != 0) overlayTop.graphics.lineStyle(getDefaultLineWidth())			overlayTop.graphics.beginFill(0xFFFFFF)			overlayTop.alpha = getBGOpacity()			overlayTop.x = getTopX()			overlayTop.y = getTopY()			overlayTop.graphics.drawRoundRect(0,0,getTopWidth(),getTopHeight(),10,10)			addChild(overlayTop)						if (getDefaultLineWidth() != 0) overlayMiddle.graphics.lineStyle(getDefaultLineWidth())			overlayMiddle.graphics.beginFill(0xFFFFFF)			overlayMiddle.alpha = getBGOpacity()			overlayMiddle.x = getMiddleX()			overlayMiddle.y = getMiddleY()			overlayMiddle.graphics.drawRoundRect(0,0,getMiddleWidth(),getMiddleHeight(),10,10)			addChild(overlayMiddle)						if (getDefaultLineWidth() != 0) overlayBottom.graphics.lineStyle(getDefaultLineWidth())			overlayBottom.graphics.beginFill(0xFFFFFF)			overlayBottom.alpha =getBGOpacity()			overlayBottom.x = getBottomX()			overlayBottom.y = getBottomY()			overlayBottom.graphics.drawRoundRect(0,0,getBottomWidth(),getBottomHeight(),10,10)			addChild(overlayBottom)					}		public function oEnterFrame(event:Event):void{			if  (scripts.length != 0){				for (var i = 0 ; i< (scripts.length) ;i ++){						if (scripts[i].advanceDefault()){						scripts[i].endScriptDefault()						scripts.splice(i,1)}}}		}				public function addOverlayScript(script:OverlayScript):void{						scripts.push(script)			script.setOverlay(this)			script.beginScript()		}				public function getTopWidth():Number{return stage.stageWidth - margin * 2}		public function getTopHeight():Number{return(tbHeights)}		public function getTopX():Number{return(margin)}		public function getTopY():Number{return(margin)}		public function getMiddleWidth():Number{return stage.stageWidth - margin *2}		public function getMiddleHeight():Number{return stage.stageHeight - margin * 4 - tbHeights * 2}		public function getMiddleX():Number{return margin}		public function getMiddleY():Number{return margin * 2 +tbHeights}		public function getBottomWidth():Number {return stage.stageWidth - margin * 2}		public function getBottomHeight():Number {return tbHeights}		public function getBottomX():Number{return margin}		public function getBottomY():Number {return stage.stageHeight - margin - tbHeights}				public function getBGOpacity():Number {return(.5)}		public function setOpacity(arg : Number):void {			opacity = arg			alpha = opacity		}		public function getOpacity():Number {return(opacity)}				public function getDefaultLineWidth():Number{return(0)}				public function setVisible(vis:Boolean):void{			if(visible != vis){			if (vis){				setOpacity(0)				visible = true				addOverlayScript( new oShowScript )			} else{				addOverlayScript(new oHideScript)			}		}					}				public function getVisible():Boolean{			return visible		}			}}