package physics{		import physics.objects.PhysObject	import flash.display.Shape	import flash.display.MovieClip	import flash.events.Event	import physics.pscript.uZoomOut	import physics.pscript.uZoomIn	import flash.ui.Keyboard	import flash.events.KeyboardEvent	import physics.fields.*		//the Class physSuper will manage the display of a universe and its modification	public class PhysSuper extends MovieClip{				public var isPaused:Boolean = false;				public var thisUniverse:PhysUniverse;		public var thisOverlay:PhysOverlay		public var frame = 0						public function PhysSuper() 										{			addEventListener(Event.ENTER_FRAME, pEnterFrame)		}		public function psKeyboard(event:KeyboardEvent):void				{			if(event.shiftKey){				if (event.keyCode == 49){thisUniverse.addUniverseScript(new uZoomOut)}				if (event.keyCode == 50){thisUniverse.addUniverseScript(new uZoomIn)}			}		}		function pEnterFrame(event:Event):void								{			frame += 1			if (!isPaused){				thisUniverse.timeStep()			}		}		public function addDrawnObject(thisObj:PhysObject)					{			thisUniverse.pushObjAndDisplay(thisObj)		}		public function removeDrawnObject(thisObj:PhysObject, ... args)		{			thisUniverse.removeChild(thisObj)			thisUniverse.removeObj(thisObj.thisUniverseIndex)		}				public function newEField():void{			var field = new PhysEField() ;			thisUniverse.pushField(field);}		public function newGField():void{			var field = new PhysGField() ; 			thisUniverse.pushField(field); }		public function newConstantField(xfield:Number,yfield:Number):void {			var field = new PhysConstantField(xfield,yfield) 			thisUniverse.pushField(field)}		public function newInverseSquareField(forceConstant:Number):void {			var field = new PhysInverseSquareField()			field.forceConstant = forceConstant			thisUniverse.pushCustomChargeField(field)		}		public function newInverseFirstField(forceConstant:Number):void {			var field = new PhysInverseFirstField()			field.forceConstant = forceConstant			thisUniverse.pushCustomChargeField(field)		}		public function newInverseCubeField(forceConstant:Number):void {			var field = new PhysInverseCubeField()			field.forceConstant = forceConstant			thisUniverse.pushCustomChargeField(field)		}			public function setPaused(bool:Boolean):void{			isPaused = bool		}		public function pauseThis():void	{			isPaused = true}		public function unPauseThis():void	{			isPaused = false}	}}