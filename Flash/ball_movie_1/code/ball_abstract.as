package code{    import math.MathArray	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;			public class ball_abstract extends MovieClip{			public var suspended:Boolean			public var dragging:Boolean						public var ball:MovieClip			public var bounds:Array			public var parentclip:ball_movie_1			public var thisforcearrow:ForceArrow						public var frame:Number		    public var xlast:Number			public var ylast:Number			public var vx:Number			public var vy:Number						public var pastx:MathArray			public var pasty:MathArray			public var velx:MathArray			public var vely:MathArray					public function ball_abstract(arg:MovieClip, arg2:Array, movie:ball_movie_1, force:ForceArrow){				bounds = arg2				ball = arg				parentclip = movie				thisforcearrow = force				suspended = 1				vy = 0				this.addEventListener(Event.ENTER_FRAME, baNextFrame)				ball.addEventListener(MouseEvent.MOUSE_DOWN,this.draghandler)				ball.addEventListener(MouseEvent.MOUSE_UP,this.releasehandler)				x = ball.x				y = ball.y				pastx = new MathArray(x,x,x,x,x) 				pasty = new MathArray(y,y,y,y,y) 				}				 function baNextFrame(event:Event):void{			if ( ! suspended) {				vy = vy + thisforcearrow.forcey				vx = vx + thisforcearrow.forcex				var newy:Number = ball.y + (vy)				var newx:Number = ball.x + (vx)										if (newy < bounds[2]){ 					vy = -1 * vy					newy = newy + 2 *(bounds[2] - newy)				}				if ( newy + ball.height > bounds[3] ){					vy = -1 * vy					newy = newy + 2 *((bounds[3] - ball.height) - newy)				}				if (newx < bounds[0]) {					vx = -1 * vx					newx = newx + 2* ( bounds[0] - newx)				}				if (newx > bounds[1] - ball.width ) { 					vx = -1 * vx 					newx = newx + 2* ( (bounds[1] - ball.width) - newx)				}				ball.x = newx				ball.y = newy											}				pastx.push(ball.x)				pastx.shift()				pasty.push(ball.y)				pasty.shift()				velx = new MathArray()				vely = new MathArray()				for ( var i:Number = 0 ; i <4 ; i ++) {					velx.push( pastx[i + 1] - pastx[i]		)				vely.push( pasty[i + 1] - pasty[i]      )				 }				 						}								 function draghandler(event:MouseEvent):void{				ball.startDrag(false)				suspended = 1				dragging = 1				x = ball.x				y = ball.y				pastx = new MathArray(x,x,x,x,x)				pasty = new MathArray(y,y,y,y,y)						}		 function releasehandler(event:MouseEvent):void{				ball.stopDrag()				suspended = 0				dragging = 0				vx = velx.mean()				vy = vely.mean()		}	}}