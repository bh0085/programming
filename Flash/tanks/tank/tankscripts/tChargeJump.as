package tanks.tank.tankscripts {		import flash.display.Shape	import flash.events.KeyboardEvent	import flash.ui.Keyboard	import flash.geom.Matrix	import flash.display.Sprite				public class tChargeJump extends TankScript{		var hasAdded:Boolean = false		var jump = false		var power = 0		var initialAngle:Number		var chargeGfx:Sprite		var chargeMask:Sprite		public var triggerDetach = true		public var multiplier = 1						override public function beginScript():void{						if(howManyOfThisScript() < 2){			thisTank.stage.addEventListener(KeyboardEvent.KEY_UP,tjRelease)			hasAdded = true				} else {scriptDone = true}					}				function tjRelease(event:KeyboardEvent):void{			//trace(Keyboard.SPACE)			//trace(event.keyCode)			triggerJump()			//if( event.keyCode == Keyboard.SPACE ) { triggerJump() }		}				function triggerJump():void{			power = multiplier* frame * 600			frame = 1			jump = true			advance()					}				override public function advance(...args):void{						if (frame ==1){				initialAngle = thisTank.angle}						var angleDelta = initialAngle - thisTank.angle			var search = true			if(isNaN(angleDelta) || !isFinite(angleDelta)){angleDelta = 0}			var loops = 0			 while( search ){				 loops ++				 if(loops >10){ search = false ; trace(angleDelta)}				if(angleDelta < -1 * Math.PI) { angleDelta += Math.PI * 2 }				if(angleDelta > Math.PI) {angleDelta -= Math.PI*2 }				if(Math.abs(angleDelta) <= Math.PI) {search = false}			}				var w = 50				var h = 20				var xOff = - w/2				var yOff = -75			if(chargeGfx == null){								chargeGfx = new Sprite()				var m = new Matrix()				m.createGradientBox(w,h,0,xOff,yOff)				var margin = 4								var chargeBar = new Sprite()				chargeBar.graphics.beginGradientFill("linear",[0x0000FF,0xFF0000],[.4,.4],[0,255],m)				chargeBar.graphics.drawRect(xOff,yOff,w,h)				chargeMask = new Sprite()				chargeMask.x = xOff + margin				chargeMask.y = yOff + margin				chargeMask.graphics.beginFill(0x000000)				chargeMask.graphics.drawRoundRect(0,0,w - margin *2, h - margin *2,5)				chargeBar.mask = chargeMask				chargeGfx.addChild(chargeBar)				chargeGfx.addChild(chargeMask)							chargeGfx.graphics.lineStyle(1,0x000000)				chargeGfx.graphics.drawRect(xOff,yOff,w,h)				addGraphic(chargeGfx)							}			if( !jump){				chargeGfx.alpha = Math.min(frame/3,1)				chargeMask.scaleX = Math.min(frame / 10,1)						}			if(jump){   				chargeGfx.visible = false				if(frame ==1 && triggerDetach){ thisTank.setDetachPronto(true)}				if(frame ==1){thisTank.thrustUpwards(power)}				if(frame >2 && frame <8){					thisTank.dampen([1,1,.5])					thisTank.torqueThrust((Math.random() - .5)* 5)				}				if(frame >8 && frame <15){					thisTank.dampen([1,1,.5])					thisTank.torqueThrust(angleDelta * 4)					}				if(frame >10){					scriptDone = true					thisTank.setDetachPronto(false)				}			} else {				if(frame  > 100) {					triggerJump()				}			}		}		override public function endScript():void{			if (hasAdded){ thisTank.stage.removeEventListener(KeyboardEvent.KEY_UP,this.tjRelease)						thisTank.rectMask.width = 0}					}	}}