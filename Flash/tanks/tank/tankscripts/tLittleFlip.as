package tanks.tank.tankscripts {		import tanks.tank.Tank		public class tLittleFlip extends TankScript{		public var targetAngle:Number		public var bounceUnit:Array		override public function advance():void{						var angleDelta = targetAngle - thisTank.angle			trace(angleDelta)			if(!isNaN(angleDelta) && isFinite(angleDelta)){							var search = true				 while( search ){					if(angleDelta < -1 * Math.PI) { angleDelta += Math.PI * 2 }					if(angleDelta > Math.PI) {angleDelta -= Math.PI*2 }					if(Math.abs(angleDelta) < Math.PI) {search = false}				}			} else { angleDelta = 0 } 						var k:Number						if (frame > 5){			 k = ( 30* angleDelta) / 10				thisTank.dampen([1,1,.2])				//thisTank.torqueThrust(k)			}						k = Math.max(5 - frame,0)* 100			thisTank.exertImpulseOn([k*thisTank.mass*bounceUnit[0],k*thisTank.mass*bounceUnit[1]])			//k = .2			//thisTank.thrustBackward(k)			thisTank.detachPronto = true									if (frame  > 10) {				scriptDone = true				thisTank.detachPronto = false			}		}		public function setBounceUnit(a:Array):void{			bounceUnit = a		}		public function setTargetAngle(n:Number):void{			targetAngle = n		}	}}