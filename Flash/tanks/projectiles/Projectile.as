package tanks.projectiles{		import physics.PhysUniverse	import physics.objects.PhysObject	import tanks.explosions.StandardExplosion	import tanks.tank.Exhaust	import tanks.tank.Tank	import tanks.explosions.Explosion	import math.VectorMath2D	import math.VectorMath3D	import tanks.scripts.ProjScript		import flash.events.Event		public class Projectile extends PhysObject{		public var colType = 1		public var thisScript:ProjScript		public var thisTank:Tank		public var initialPower:Number		public var initialAngle:Number		public var initialXY:Array		public var thisExplosion:Explosion		public var thisExplPower:Number					public function Projectile():void{			createScript()		}		public function setTank(tank:Tank):void{			thisTank = tank			}				public function setPower(p:Number):void{initialPower = p}		public function setAngle(a:Number):void{initialAngle = a}				public function pNextFrame(e:Event):void{			if(thisScript.advanceDefault(0)){thisScript.endScriptDefault()}else{			}			rotateTo(VectorMath2D.vectorGetAngle(getVel()))		}		public function run():void{			addEventListener(Event.ENTER_FRAME,pNextFrame)		}		public function createScript():void{}		override public function destroyDefault():void{			removeEventListener(Event.ENTER_FRAME,pNextFrame)						thisUniverse.thisstage.removeDrawnObject(this)			destroy()		}		public function setExplPower(p:Number):void{			thisExplPower = p		}		public function setExplosion(expl:Explosion):void{			thisExplosion = expl		}				public static function initializeProjectile(proj:Projectile,xyInit:Array,expl:Explosion,...args):void{						PhysUniverse.universe.thisstage.addDrawnObject(proj)			proj.setExplosion(expl)						if(args.length >0){proj.setTank(args[0])} else{proj.setTank(null)}			proj.setXY(xyInit)			if(args.length >1){proj.setAngle(args[1])} else {proj.setAngle(0)}			if(args.length >2){proj.setPower(args[2])} else {proj.setPower(1)}			if(args.length >3){proj.setExplPower(args[3])} else {proj.setExplPower(1)}			proj.run()				}		public function defaultExplosion():Explosion{			return new StandardExplosion()		}	}}