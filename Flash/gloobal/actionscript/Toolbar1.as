package actionscript{	import flash.display.Sprite	import flash.text.TextField	import flash.text.TextFormat	import flash.events.MouseEvent	import flash.display.Shape	public class Toolbar1 extends Sprite{		var extOutlineColor = 0x444444		var intOutlineColor = 0xBBBBBB		var bgColor = 0xDDDDDD		var textBGColor = 0xFFFFFF		var textColor = 0x000000		var outBGS = new Array()		var arrBGS = new Array()		var arrExtra:Sprite		var outExtra:Sprite		var arrExtra2:Sprite		var outExtra2:Sprite		public function Toolbar1(){			var toolHeight = 75			var toolWidth = 200					var bg = new Sprite			bg.graphics.lineStyle(0,extOutlineColor)			bg.graphics.beginFill(bgColor)			bg.graphics.drawRect(0,0,toolWidth,toolHeight)			addChild(bg)						var outgoing = new Sprite()			outgoing.graphics.beginFill(textBGColor,.2)			outgoing.graphics.lineStyle(0,intOutlineColor)			var outM = 1			var outOffsX = outM			var outOffsY = outM 			var outW = toolWidth / 2 - 2 * outM			var outH = toolHeight - outM * 2			var lineHeight = 12			outgoing.x = outOffsX			outgoing.y = outOffsY			outgoing.graphics.drawRect(0,0,outW,outH)						var arriving = new Sprite()			arriving.graphics.beginFill(textBGColor,.2)			arriving.graphics.lineStyle(0,intOutlineColor)			var arrM = 1			var arrOffsX = arrM + toolWidth/2			var arrOffsY = arrM 			var arrW = toolWidth / 2 - 2 *arrM			var arrH = toolHeight - arrM * 2			var lineHeight = 12			arriving.x = arrOffsX			arriving.y = arrOffsY			arriving.graphics.drawRect(0,0,arrW,arrH)						var f = new DefaultFont()			var tF = new TextFormat(f.fontName,12,textColor,true)			tF.align = 'center'						outBGS = new Array()			arrBGS = new Array()			outExtra = new Sprite()			outExtra.mouseChildren = false			outExtra.mouseEnabled = false			arrExtra = new Sprite()			arrExtra.mouseChildren = false			arrExtra.mouseEnabled = false			outExtra2 = new Sprite()			outExtra2.mouseChildren = false			outExtra2.mouseEnabled = false			arrExtra2 = new Sprite()			arrExtra2.mouseChildren = false			arrExtra2.mouseEnabled = false			arriving.addChild(arrExtra)			outgoing.addChild(outExtra)			arriving.addChild(arrExtra2)			outgoing.addChild(outExtra2)						for(var j = 0 ; j < 2 ; j++){				for(var i = 0 ; i < 5; i++){					var field =  new TextField()					field.defaultTextFormat = tF					field.embedFonts = true					if(i == 0){if(j ==0){string = "Departure Region"} else {string = "Arrival Region"}} else {						if( i == 1 ){ var string = "Continent"} else {							if(i == 2){ string = "Country" } else {								if(i ==3){string = "City" }}}}					if(i == 4){						if(j ==0){ string = "Custom" } else {break}					}					field.width = arrW					field.height = lineHeight					field.text = string					field.name = string					field.selectable = false					field.y = i * lineHeight										var box = new Shape()					box.y = field.y					box.graphics.beginFill(0xFFFFFF,1)					box.graphics.drawRect(0,0,outgoing.width,lineHeight)					box.alpha = .5										var box2 = new Shape()					box2.y = field.y					box2.graphics.beginFill(0xFFFFFF)					box2.graphics.drawRect(0,0,outgoing.width,lineHeight)					box2.alpha = .5										if(j ==0){						outBGS.push(box)						outBGS.push(box2)					} else {						arrBGS.push(box)						arrBGS.push(box2)											}										if(j == 0) {outgoing.addChild(field)}					if(j == 1) {arriving.addChild(field)}				}			}			outExtra2.addChild(outBGS[5])			arrExtra2.addChild(arrBGS[5])										 						arriving.addEventListener(MouseEvent.MOUSE_OVER,arrivingMouseOver)			outgoing.addEventListener(MouseEvent.MOUSE_OVER,outgoingMouseOver)			arriving.addEventListener(MouseEvent.MOUSE_DOWN,arrivingMouseDown)			outgoing.addEventListener(MouseEvent.MOUSE_DOWN,outgoingMouseDown)						arriving.addEventListener(MouseEvent.MOUSE_OUT,arrivingMouseOut)			outgoing.addEventListener(MouseEvent.MOUSE_OUT,outgoingMouseOut)			addChild(arriving)			addChild(outgoing)			bg.alpha = .3			outgoing.alpha = .8			arriving.alpha = .8		}		public function arrivingMouseOver(ev:MouseEvent):void{			switch( ev.target.name ){				case "Continent":try{arrExtra.removeChildAt(0)} catch(e:Error){}  ; arrExtra.addChildAt(arrBGS[2],0); break ;				case "Country":try{arrExtra.removeChildAt(0)} catch(e:Error){} ;arrExtra.addChildAt(arrBGS[4],0)  ; break;				case "City":try{arrExtra.removeChildAt(0)} catch(e:Error){} ;arrExtra.addChildAt(arrBGS[6],0);  break;				default:			}		}		public function outgoingMouseOut(ev:MouseEvent):void{				try{outExtra.removeChildAt(0)} catch(e:Error){}		}		public function arrivingMouseOut(ev:MouseEvent):void{				try{arrExtra.removeChildAt(0)} catch(e:Error){}		}		public function arrivingMouseDown(ev:MouseEvent):void{			switch( ev.target.name ){				case "Continent":try{arrExtra2.removeChildAt(0)} catch(e:Error){}  ; arrExtra2.addChildAt(arrBGS[3],0); GloobalMain.main.setArrivalType("Continent"); break ;				case "Country":try{arrExtra2.removeChildAt(0)} catch(e:Error){} ;arrExtra2.addChildAt(arrBGS[5],0)  ; GloobalMain.main.setArrivalType("Country"); break;				case "City":try{arrExtra2.removeChildAt(0)} catch(e:Error){} ;arrExtra2.addChildAt(arrBGS[7],0);  GloobalMain.main.setArrivalType("City"); break;				default:							}			GloobalMain.main.generatePrompt()		}				public function outgoingMouseOver(ev:MouseEvent):void{			switch( ev.target.name ){				case "Continent":try{outExtra.removeChildAt(0)} catch(e:Error){}  ; outExtra.addChildAt(outBGS[2],0); break ;				case "Country":try{outExtra.removeChildAt(0)} catch(e:Error){} ;outExtra.addChildAt(outBGS[4],0)  ; break;				case "City":try{outExtra.removeChildAt(0)} catch(e:Error){} ;outExtra.addChildAt(outBGS[6],0);  break;				case "Custom":try{outExtra.removeChildAt(0)} catch(e:Error){} ;outExtra.addChildAt(outBGS[8],0);  break;				default:			}					}		public function outgoingMouseDown(ev:MouseEvent):void{			switch( ev.target.name ){				case "Continent":try{outExtra2.removeChildAt(0)} catch(e:Error){}  ; outExtra2.addChildAt(outBGS[3],0); GloobalMain.main.setDepartureType( "Continent"); break ;				case "Country":try{outExtra2.removeChildAt(0)} catch(e:Error){} ;outExtra2.addChildAt(outBGS[5],0)  ; GloobalMain.main.setDepartureType( "Country"); break;				case "City":try{outExtra2.removeChildAt(0)} catch(e:Error){} ;outExtra2.addChildAt(outBGS[7],0);  GloobalMain.main.setDepartureType( "City"); break;				case "Custom":try{outExtra2.removeChildAt(0)} catch(e:Error){} ;outExtra2.addChildAt(outBGS[9],0);  GloobalMain.main.setDepartureType( "Custom"); break;				default:							}								GloobalMain.main.generatePrompt()		}	}}