package physics.toolbox.graphics{		import flash.events.MouseEvent	import physics.toolbox.ToolBox	import physics.ForceArrow		public class ToolBoxCreateForce extends ToolBoxDraggable {				var releaseDrag:Boolean = false		var dragging:Boolean = true				public function ToolBoxCreatePotentiometer(toolbox:ToolBox){			super(toolbox)		}		override function mouseDown(event:MouseEvent){						if(!dragging){				dragging = true				startDrag()							} else { if (clickCount == 0){				seg0 = [thisToolBox.thisSuper.universeX(transform.concatenatedMatrix.tx), thisToolBox.thisSuper.universeY(transform.concatenatedMatrix.ty)]				clickCount =1} else {				seg1 =[thisToolBox.thisSuper.universeX(transform.concatenatedMatrix.tx), thisToolBox.thisSuper.universeY(transform.concatenatedMatrix.ty)]				trace(clickCount)				clickCount =2				stopDrag();				dragging = false;				thisToolBox.thisSuper.addPotentiometer(seg0,seg1)							x = fixedXY[0]				y = fixedXY[1]				}			}					}		override function mouseUp(event:MouseEvent){			stopDrag()			dragging = false			var forceArrow = new ForceArrow()			var mx = thisToolBox.thisSuper.mouseX			var my = thisToolBox.thisSuper.mouseY			thisToolBox.thisSuper.addChild(forceArrow)			forceArrow.x = mx			forceArrow.y = mx						var newField = thisToolBox.thisSuper.newConstantField(1,1)			forceArrow.setField(newField)						}	}	}