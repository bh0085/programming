package ct_code{		import Math	import flash.events.Event	import flash.events.MouseEvent	import flash.display.MovieClip		public class ChargeSystem extends MovieClip {		public var charges:Array;		public var perq:Number;		public var numsteps:Number;		public var steplength:Number;		public var fieldlines:FieldPlot;		public var ischanged:Boolean = true;		public var parentclip:ChargeTest;				public function ChargeSystem(parentarg:ChargeTest){			charges = new Array()			perq = 10			numsteps = 10			steplength = 10			parentclip = parentarg			}						public function pushCharge(charge:PtCharge):void {			var thischarge:PtCharge = charge			var index:Number = charges.length			charges.push(charge)			thischarge.graphic.addEventListener(MouseEvent.MOUSE_DOWN,charge.drag)			thischarge.graphic.addEventListener(MouseEvent.MOUSE_UP,charge.unclick)			thischarge.graphic.addEventListener(Event.ENTER_FRAME,charge.enterNext)			thischarge.csystem = this			this.addEventListener(Event.ENTER_FRAME,this.enterNext)			thischarge.sysindex = index		}				public function drawE():void{			fieldlines = new FieldPlot(this)		}		public function findE(xarg:Number,yarg:Number):Array {			var efield:Array = new Array(0,0)			for (var i:Number = 0 ; i < charges.length ; i++){				var rx:Number = xarg - charges[i].thisx				var ry:Number= yarg - charges[i].thisy				var r:Number = Math.sqrt(Math.pow(rx, 2) + Math.pow(ry,2))				efield[0] += charges[i].charge * rx / Math.pow(r,2) 				efield[1] += charges[i].charge * ry / Math.pow(r,2)						}			return efield		}		function enterNext(event:Event):void{			if (ischanged) {				this.drawE()				ischanged = false				parentclip.isupdated = true}		}	}}